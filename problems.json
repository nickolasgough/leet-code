[
  {
    "name": "Add Two Numbers",
    "url": "https://leetcode.com/problems/add-two-numbers/",
    "descriptionHTML": "<p>You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.</p><p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p>",
    "solutionURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/add-two-numbers/main.go"
  },
  {
    "name": "Longest Substring Without Repeating Characters",
    "url": "https://leetcode.com/problems/longest-substring-without-repeating-characters/",
    "descriptionHTML": "<p>Given a string <code>s</code>, find the length of the longest substring without repeating characters.</p>",
    "solutionURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/longest-substring-without-repeating-characters/main.go"
  },
  {
    "name": "ZigZag Conversion",
    "url": "https://leetcode.com/problems/zigzag-conversion/",
    "descriptionHTML": "<p>The string <code>\"PAYPALISHIRING\"</code> is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)</p><blockquote>P   A   H   N<br>A P L S I I G<br>Y   I   R</blockquote><p>And then read line by line: <code>\"PAHNAPLSIIGYIR\"</code></p><p>Write the code that will take a string and make this conversion given a number of rows:</p><blockquote>string convert(string s, int numRows);</blockquote>",
    "solutionURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/zigzag-conversion/main.go"
  },
  {
    "name": "String to Integer (atoi)",
    "url": "https://leetcode.com/problems/string-to-integer-atoi/",
    "descriptionHTML": "<p>Implement the <code>myAtoi(string s)</code> function, which converts a string to a 32-bit signed integer.</p><p>The algorithm for <code>myAtoi(string s)</code> is as follows:</p><ol><li>Whitespace: Ignore any leading whitespace (<code>\" \"</code>).</li><li>Signedness: Determine the sign by checking if the next character is <code>'-'</code> or <code>'+'</code>, assuming positivity if neither present.</li><li>Conversion: Read the integer by skipping leading zeros until a non-digit character is encountered or the end of the string is reached. If no digits were read, then the result is 0.</li><li>Rounding: If the integer is out of the 32-bit signed integer range <code>[-2<sup>31</sup>, 2<sup>31</sup> - 1]</code>, then round the integer to remain in the range. Specifically, integers less than <code>-2<superscript>31</superscript></code> should be rounded to <code>-2<sup>31</sup></code>, and integers greater than <code>2<sup>31</sup> - 1</code> should be rounded to <code>2<sup>31</sup> - 1</code>.</li></ol><p>Return the integer as the final result.</p>",
    "solutionURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/string-to-integer-atoi/main.go"
  },
  {
    "name": "Reverse Integer",
    "url": "https://leetcode.com/problems/reverse-integer/",
    "descriptionHTML": "<p>Given a signed 32-bit integer <code>x</code>, return <code>x</code> with its digits reversed. If reversing <code>x</code> causes the value to go outside the signed 32-bit integer range <code>[-2<sup>31</sup>, 2<sup>31</sup> - 1]</code>, then return 0.</p><p>Assume the environment does not allow you to store 64-bit integers (signed or unsigned).</p>",
    "solutionURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/reverse-integer/main.go"
  },
  {
    "name": "Container With Most Water",
    "url": "https://leetcode.com/problems/container-with-most-water/",
    "descriptionHTML": "<p>You are given an integer array <code>height</code> of length <code>n</code>. There are <code>n</code> vertical lines drawn such that the two endpoints of the <code>i<sup>th</sup></code> line are <code>(i, 0)</code> and <code>(i, height[i])</code>.</p><p>Find two lines that together with the x-axis form a container, such that the container contains the most water.<br>Return the maximum amount of water a container can store.</p><p>Notice that you may not slant the container.</p>",
    "solutionURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/container-with-most-water/main.go"
  },
  {
    "name": "Roman to Integer",
    "url": "https://leetcode.com/problems/roman-to-integer/",
    "descriptionHTML": "<p>Roman numerals are represented by seven different symbols: <code>I</code>, <code>V</code>, <code>X</code>, <code>L</code>, <code>C</code>, <code>D</code>, and <code>M</code>.</p><table><tr><th>Symbol</th><th>Value</th></tr><tr><td>I</td><td>1</td></tr><tr><td>V</td><td>5</td></tr><tr><td>X</td><td>10</td></tr><tr><td>L</td><td>50</td></tr><tr><td>C</td><td>100</td></tr><tr><td>D</td><td>500</td></tr><tr><td>M</td><td>1000</td></tr></table><p>For example, <code>2</code> is written as <code>II</code> in Roman numeral, just two ones added together. <code>12</code> is written as <code>XII</code>, which is simply <code>X + II</code>. The number <code>27</code< is written as <code>XXVII</code>, which is <code>XX + V + II</code>.</p><p>Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not <code>IIII</code>. Instead, the number four is written as <code>IV</code>. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as <code>IX</code>. There are six instances where subtraction is used:</p><ul><li><code>I</code> can be placed before <code>V</code> (5) and <code>X</code> (10) to make 4 and 9.</li><li><code>X</code> can be placed before <code>L</code> (50) and <code>C</code> (100) to make 40 and 90.</li><li><code>C</code> can be placed before <code>D</code> (500) and <code>M</code> (1000) to make 400 and 900.</li><li>Given a roman numeral, convert it to an integer.</li></ul>",
    "solutionURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/roman-to-integer/main.go"
  },
  {
    "name": "Integer to Roman",
    "url": "https://leetcode.com/problems/integer-to-roman/",
    "descriptionHTML": "<p>Seven different symbols represent Roman numerals with the following values:</p><table><tr><th>Symbol</th><th>Value</th></tr><tr><td>I</td><td>1</td></tr><tr><td>V</td><td>5</td></tr><tr><td>X</td><td>10</td></tr><tr><td>L</td><td>50</td></tr><tr><td>C</td><td>100</td></tr><tr><td>D</td><td>500</td></tr><tr><td>M</td><td>1000</td></tr></table><p>Roman numerals are formed by appending the conversions of decimal place values from highest to lowest. Converting a decimal place value into a Roman numeral has the following rules:</p><ul><li>If the value does not start with 4 or 9, select the symbol of the maximal value that can be subtracted from the input, append that symbol to the result, subtract its value, and convert the remainder to a Roman numeral.</li><li>If the value starts with 4 or 9 use the subtractive form representing one symbol subtracted from the following symbol, for example, 4 is 1 (<code>I</code>) less than 5 (<code>V</code>): <code>IV</code> and 9 is 1 (<code>I</code>) less than 10 (<code>X</code>): <code>IX</code>. Only the following subtractive forms are used: 4 (<code>IV</code>), 9 (<code>IX</code>), 40 (<code>XL</code>), 90 (<code>XC</code>), 400 (<code>CD</code>) and 900 (<code>CM</code>).</li><li>Only powers of 10 (<code>I</code>, <code>X</code>, <code>C</code>, <code>M</code>) can be appended consecutively at most 3 times to represent multiples of 10. You cannot append 5 (<code>V</code>), 50 (<code>L</code>), or 500 (<code>D</code>) multiple times. If you need to append a symbol 4 times use the subtractive form.</li></ul><p>Given an integer, convert it to a Roman numeral.</p>",
    "solutionURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/integer-to-roman/main.go"
  },
  {
    "name": "Letter Combinations of a Phone Number",
    "url": "https://leetcode.com/problems/letter-combinations-of-a-phone-number/",
    "descriptionHTML": "<p>Given a string containing digits from <code>2-9</code> inclusive, return all possible letter combinations that the number could represent. Return the answer in any order.</p><table><tr><td>1: <code>empty</code></td><td>2: abc</td><td>3: def</td></tr><tr><td>4: ghi</td><td>5: jkl</td><td>6: mno</td></tr><tr><td>7: pqrs</td><td>8: tuv</td><td>9: wxyz</td></tr></table><p>A mapping of digits to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.</p>",
    "solutionURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/letter-combinations-of-a-phone-number/main.go"
  },
  {
    "name": "Remove Nth Node From End of List",
    "url": "https://leetcode.com/problems/remove-nth-node-from-end-of-list/",
    "descriptionHTML": "<p>Given the <code>head</code> of a linked list, remove the <code>nth</code> node from the end of the list and return its head.</p>",
    "solutionURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/remove-nth-node-from-end-of-list/main.go"
  },
  {
    "name": "Generate Parentheses",
    "url": "https://leetcode.com/problems/generate-parentheses/",
    "descriptionHTML": "<p>Given <code>n</code> pairs of parentheses, write a function to generate all combinations of well-formed parentheses.</p>",
    "solutionURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/generate-parentheses/main.go"
  },
  {
    "name": "Swap Nodes in Pairs",
    "url": "https://leetcode.com/problems/swap-nodes-in-pairs/",
    "descriptionHTML": "<p>Given a linked list, swap every two adjacent nodes and return its head. You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)</p>",
    "solutionURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/swap-nodes-in-pairs/main.go"
  },
  {
    "name": "Reverse Nodes in k-Group",
    "url": "https://leetcode.com/problems/reverse-nodes-in-k-group/",
    "descriptionHTML": "<p>Given the <code>head</code> of a linked list, reverse the nodes of the list <code>k</code> at a time, and return the modified list.</p><p><code>k</code> is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of <code>k</code> then left-out nodes, in the end, should remain as it is.</p><p>You may not alter the values in the list's nodes, only nodes themselves may be changed.</p>",
    "solutionURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/reverse-nodes-in-k-group/main.go"
  },
  {
    "name": "Substring with Concatenation of All Words",
    "url": "https://leetcode.com/problems/substring-with-concatenation-of-all-words/",
    "descriptionHTML": "<p>You are given a string <code>s</code> and an array of strings <code>words</code<. All the strings of <code>words</code> are of the same length.</p><p>A concatenated string is a string that exactly contains all the strings of any permutation of <code>words</code> concatenated.</p><ul><li>For example, if <code>words = [\"ab\",\"cd\",\"ef\"]</code>, then <code>\"abcdef\"</code>, <code>\"abefcd\"</code>, <code>\"cdabef\"</code>, <code>\"cdefab\"</code>, <code>\"efabcd\"</code>, and <code>\"efcdab\"</code> are all concatenated strings. <code>\"acdbef\"</code> is not a concatenated string because it is not the concatenation of any permutation of <code>words</code>.</li></ul><p>Return an array of the starting indices of all the concatenated substrings in <code>s</code>. You can return the answer in any order.</p>",
    "solutionURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/substring-with-concatenation-of-all-words/main.go"
  }
]
