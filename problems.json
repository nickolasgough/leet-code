[
  {
    "name": "Add Two Numbers",
    "url": "https://leetcode.com/problems/add-two-numbers/",
    "imageURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/descriptions/lc-add-two-numbers.png",
    "solutionURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/solutions/add-two-numbers/main.go",
    "descriptionHTML": "You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.<br>You may assume the two numbers do not contain any leading zero, except the number 0 itself."
  },
  {
    "name": "Longest Substring Without Repeating Characters",
    "url": "https://leetcode.com/problems/longest-substring-without-repeating-characters/",
    "imageURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/descriptions/lc-longest-substring-without-repeating-characters.png",
    "solutionURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/solutions/longest-substring-without-repeating-characters/main.go",
    "descriptionHTML": "Given a string <code>s</code>, find the length of the longest substring without repeating characters."
  },
  {
    "name": "ZigZag Conversion",
    "url": "https://leetcode.com/problems/zigzag-conversion/",
    "imageURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/descriptions/lc-zigzag-conversion.png",
    "solutionURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/solutions/zigzag-conversion/main.go",
    "descriptionHTML": "The string <code>\"PAYPALISHIRING\"</code> is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)<blockquote>P   A   H   N<br>A P L S I I G<br>Y   I   R</blockquote>And then read line by line: <code>\"PAHNAPLSIIGYIR\"</code><br>Write the code that will take a string and make this conversion given a number of rows:>string convert(string s, int numRows);"
  },
  {
    "name": "String to Integer (atoi)",
    "url": "https://leetcode.com/problems/string-to-integer-atoi/",
    "imageURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/descriptions/lc-string-to-integer-atoi.png",
    "solutionURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/solutions/string-to-integer-atoi/main.go",
    "descriptionHTML": "Implement the <code>myAtoi(string s)</code> function, which converts a string to a 32-bit signed integer.<br>The algorithm for <code>myAtoi(string s)</code> is as follows:<br><ol><li>Whitespace: Ignore any leading whitespace (<code>\" \"</code>).</li><li>Signedness: Determine the sign by checking if the next character is <code>'-'</code> or <code>'+'</code>, assuming positivity if neither present.</li><li>Conversion: Read the integer by skipping leading zeros until a non-digit character is encountered or the end of the string is reached. If no digits were read, then the result is 0.</li><li>Rounding: If the integer is out of the 32-bit signed integer range <code>[-2<sup>31</sup>, 2<sup>31</sup> - 1]</code>, then round the integer to remain in the range. Specifically, integers less than <code>-2<superscript>31</superscript></code> should be rounded to <code>-2<sup>31</sup></code>, and integers greater than <code>2<sup>31</sup> - 1</code> should be rounded to <code>2<sup>31</sup> - 1</code>.</li></ol>Return the integer as the final result."
  },
  {
    "name": "Reverse Integer",
    "url": "https://leetcode.com/problems/reverse-integer/",
    "imageURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/descriptions/lc-reverse-integer.png",
    "solutionURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/solutions/reverse-integer/main.go",
    "descriptionHTML": "Given a signed 32-bit integer <code>x</code>, return <code>x</code> with its digits reversed. If reversing <code>x</code> causes the value to go outside the signed 32-bit integer range <code>[-2<sup>31</sup>, 2<sup>31</sup> - 1]</code>, then return 0.<br>Assume the environment does not allow you to store 64-bit integers (signed or unsigned)."
  },
  {
    "name": "Container With Most Water",
    "url": "https://leetcode.com/problems/container-with-most-water/",
    "imageURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/descriptions/lc-container-with-most-water.png",
    "solutionURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/solutions/container-with-most-water/main.go",
    "descriptionHTML": "You are given an integer array <code>height</code> of length <code>n</code>. There are <code>n</code> vertical lines drawn such that the two endpoints of the <code>i<sup>th</sup></code> line are <code>(i, 0)</code> and <code>(i, height[i])</code>.<br>Find two lines that together with the x-axis form a container, such that the container contains the most water.<br>Return the maximum amount of water a container can store.<br>Notice that you may not slant the container."
  },
  {
    "name": "Roman to Integer",
    "url": "https://leetcode.com/problems/roman-to-integer/",
    "imageURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/descriptions/lc-roman-to-integer.png",
    "solutionURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/solutions/roman-to-integer/main.go",
    "descriptionHTML": "Roman numerals are represented by seven different symbols: <code>I</code>, <code>V</code>, <code>X</code>, <code>L</code>, <code>C</code>, <code>D</code>, and <code>M</code>.<blockquote>Symbol       Value<br>I             1<br>V             5<br>X             10<br>L             50<br>C             100<br>D             500<br>M             1000</blockquote>For example, <code>2</code> is written as <code>II</code> in Roman numeral, just two ones added together. <code>12</code> is written as <code>XII</code>, which is simply <code>X + II</code>. The number <code>27</code< is written as <code>XXVII</code>, which is <code>XX + V + II</code>.<br>Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not <code>IIII</code>. Instead, the number four is written as <code>IV</code>. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as <code>IX</code>. There are six instances where subtraction is used:<ul><li><code>I</code> can be placed before <code>V</code> (5) and <code>X</code> (10) to make 4 and 9.</li><li><code>X</code> can be placed before <code>L</code> (50) and <code>C</code> (100) to make 40 and 90.</li><li><code>C</code> can be placed before <code>D</code> (500) and <code>M</code> (1000) to make 400 and 900.</li><li>Given a roman numeral, convert it to an integer.</li></ul>"
  },
  {
    "name": "Integer to Roman",
    "url": "https://leetcode.com/problems/integer-to-roman/",
    "imageURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/descriptions/lc-integer-to-roman.png",
    "solutionURL": "https://raw.githubusercontent.com/nickolasgough/leet-code/master/solutions/integer-to-roman/main.go",
    "descriptionHTML": "Seven different symbols represent Roman numerals with the following values:<blockquote>Symbol       Value<br>I             1<br>V             5<br>X             10<br>L             50<br>C             100<br>D             500<br>M             1000</blockquote>Roman numerals are formed by appending the conversions of decimal place values from highest to lowest. Converting a decimal place value into a Roman numeral has the following rules:<ul><li>If the value does not start with 4 or 9, select the symbol of the maximal value that can be subtracted from the input, append that symbol to the result, subtract its value, and convert the remainder to a Roman numeral.</li><li>If the value starts with 4 or 9 use the subtractive form representing one symbol subtracted from the following symbol, for example, 4 is 1 (<code>I</code>) less than 5 (<code>V</code>): <code>IV</code> and 9 is 1 (<code>I</code>) less than 10 (<code>X</code>): <code>IX</code>. Only the following subtractive forms are used: 4 (<code>IV</code>), 9 (<code>IX</code>), 40 (<code>XL</code>), 90 (<code>XC</code>), 400 (<code>CD</code>) and 900 (<code>CM</code>).</li><li>Only powers of 10 (<code>I</code>, <code>X</code>, <code>C</code>, <code>M</code>) can be appended consecutively at most 3 times to represent multiples of 10. You cannot append 5 (<code>V</code>), 50 (<code>L</code>), or 500 (<code>D</code>) multiple times. If you need to append a symbol 4 times use the subtractive form.</li>Given an integer, convert it to a Roman numeral."
  }
]
